searchState.loadedDescShard("atomic_store", 0, "Contains the error value\nContains the success value\nConvenience type alias\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe central index of an atomic version of truth across …\nThis exists to provide a common type for serializing and …\nEnables each managed resource storage instance to …\nIterate over archive files in the directory <code>root_path</code>.\nCommit the version. Note that all logs and stores must …\nAttempt to initialize a new atomic state in the specified …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAttempt to load the specified atomic state in the …\nSet the commit timeout. By default, <code>AtomicStore</code> will wait …\nArkWorks deserialization error\nSNAFU context selector for the <code>PersistenceError::ArkDe</code> …\nArkWorks serialization error\nSNAFU context selector for the <code>PersistenceError::ArkSer</code> …\nBincode deserialization error\nSNAFU context selector for the <code>PersistenceError::BincodeDe</code> …\nBincode serialization error\nSNAFU context selector for the <code>PersistenceError::BincodeSer</code>…\nDuplicate resource name\nSNAFU context selector for the …\nFailed to find resource\nSNAFU context selector for the …\nFailed to resolve path\nSNAFU context selector for the …\nFailed to write to file\nSNAFU context selector for the …\nUnimplemented feature\nSNAFU context selector for the …\nPath to file is invalid\nSNAFU context selector for the …\nPath to file is invalid\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the <code>PersistenceError::OtherLoad</code> …\nSNAFU context selector for the <code>PersistenceError::OtherStore</code>…\nError type for AtomicStore\nStored state mismatch with load specification\nSNAFU context selector for the …\nstd::io directory operations error\nSNAFU context selector for the …\nstd::io open error\nSNAFU context selector for the <code>PersistenceError::StdIoOpen</code> …\nstd::io read error\nSNAFU context selector for the <code>PersistenceError::StdIoRead</code> …\nstd::io seek error\nSNAFU context selector for the <code>PersistenceError::StdIoSeek</code> …\nstd::io write error\nSNAFU context selector for the <code>PersistenceError::StdIoWrite</code>…\nPlaceholder for PoisonError specializations\nSNAFU context selector for the <code>PersistenceError::SyncPoison</code>…\n<code>AtomicStore::commit_version</code> took to long to wait for Log …\nSNAFU context selector for the <code>PersistenceError::TimedOut</code> …\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe name of the actual file\nThe resource key\nResource key/file pattern\nResource key/file pattern\nThe provided path\nThe provided path\nThe provided path\nthe write position in the file\nFor now, this is implemented with a direct copy from …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGet the unix timestamp\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")